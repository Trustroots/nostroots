import type { AnyConstructor, MatcherContext, MatchResult } from "./_types.js";
export declare function toBe(context: MatcherContext, expect: unknown): MatchResult;
export declare function toEqual(context: MatcherContext, expected: unknown): MatchResult;
export declare function toStrictEqual(context: MatcherContext, expected: unknown): MatchResult;
export declare function toBeCloseTo(context: MatcherContext, expected: number, numDigits?: number): MatchResult;
export declare function toBeDefined(context: MatcherContext): MatchResult;
export declare function toBeUndefined(context: MatcherContext): MatchResult;
export declare function toBeFalsy(context: MatcherContext): MatchResult;
export declare function toBeTruthy(context: MatcherContext): MatchResult;
export declare function toBeGreaterThanOrEqual(context: MatcherContext, expected: number): MatchResult;
export declare function toBeGreaterThan(context: MatcherContext, expected: number): MatchResult;
export declare function toBeInstanceOf<T extends AnyConstructor>(context: MatcherContext, expected: T): MatchResult;
export declare function toBeLessThanOrEqual(context: MatcherContext, expected: number): MatchResult;
export declare function toBeLessThan(context: MatcherContext, expected: number): MatchResult;
export declare function toBeNaN(context: MatcherContext): MatchResult;
export declare function toBeNull(context: MatcherContext): MatchResult;
export declare function toHaveLength(context: MatcherContext, expected: number): MatchResult;
export declare function toHaveProperty(context: MatcherContext, propName: string | string[], v?: unknown): MatchResult;
export declare function toContain(context: MatcherContext, expected: unknown): MatchResult;
export declare function toContainEqual(context: MatcherContext, expected: unknown): MatchResult;
export declare function toMatch(context: MatcherContext, expected: RegExp): MatchResult;
export declare function toMatchObject(context: MatcherContext, expected: Record<PropertyKey, unknown> | Record<PropertyKey, unknown>[]): MatchResult;
export declare function toHaveBeenCalled(context: MatcherContext): MatchResult;
export declare function toHaveBeenCalledTimes(context: MatcherContext, expected: number): MatchResult;
export declare function toHaveBeenCalledWith(context: MatcherContext, ...expected: unknown[]): MatchResult;
export declare function toHaveBeenLastCalledWith(context: MatcherContext, ...expected: unknown[]): MatchResult;
export declare function toHaveBeenNthCalledWith(context: MatcherContext, nth: number, ...expected: unknown[]): MatchResult;
export declare function toHaveReturned(context: MatcherContext): MatchResult;
export declare function toHaveReturnedTimes(context: MatcherContext, expected: number): MatchResult;
export declare function toHaveReturnedWith(context: MatcherContext, expected: unknown): MatchResult;
export declare function toHaveLastReturnedWith(context: MatcherContext, expected: unknown): MatchResult;
export declare function toHaveNthReturnedWith(context: MatcherContext, nth: number, expected: unknown): MatchResult;
export declare function toThrow<E extends Error = Error>(context: MatcherContext, expected?: string | RegExp | E | (new (...args: any[]) => E)): MatchResult;
//# sourceMappingURL=_matchers.d.ts.map